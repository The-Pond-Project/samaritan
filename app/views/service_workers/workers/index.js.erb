const CACHE_VERSION = 'v1';
const CACHE_NAME = CACHE_VERSION + ':sw-cache-';

self.addEventListener('install', event => {
  event.waitUntil(
    caches
      .open(CACHE_NAME)
      .then(cache => {
      // add files we want to cache by default
      return cache.addAll(cachedViews);
      })
      .then(() => self.skipWaiting())
  );
});

self.addEventListener('activate', () => {
  event.waitUntil(
    caches
      .keys()
      .then(cacheNames => {
        return Promise.all(
          cacheNames.filter(cacheName => {
            return cacheName.indexOf(CACHE_VERSION) !==0;
          }).map(cacheName => {
            return caches.delete(cacheName)
          })
        )
      })
  )
});


self.addEventListener('fetch', event => {
  if(event.request.method === "GET") {
    event.respondWith(
      fetch(event.request)
      .then(response => {
        const requestClone = response.clone();
        caches.open(CACHE_NAME).then(cache => {
          cache.put(event.request, requestClone)
        });
        return response
      })
      .catch(error => caches.match(event.request).then(response => response))
    );
  }
});