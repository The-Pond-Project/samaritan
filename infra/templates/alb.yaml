AWSTemplateFormatVersion: 2010-09-09

Parameters:
  ProjectName:
    Type: String
  Environment:
    Type: String

  VpcId:
    Type: String
  PublicSubnets:
    Type: String
  DNSHostedZoneId:
    Type: String
  ProjectDNSName:
    Type: String

Conditions:
  IsProd: !Equals [!Ref Environment, 'prod']
  IsNotProd: !Not [Condition: IsProd]

Resources:
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt LoadBalancerSecurityGroup.GroupId
      Subnets: !Split [ ',', !Ref PublicSubnets ]
      Tags:
        - Key: project-name
          Value: !Ref ProjectName
        - Key: environment
          Value: !Ref Environment

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      TargetType: ip
      Protocol: HTTP
      Port: 80
      VpcId: !Ref VpcId
      HealthCheckPath: /api/_ping
      HealthCheckPort: 80
      HealthCheckIntervalSeconds: 60
      HealthCheckTimeoutSeconds: 10
      Tags:
        - Key: project-name
          Value: !Ref ProjectName
        - Key: environment
          Value: !Ref Environment

  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Type: A
      Name: !Ref ProjectDNSName
      HostedZoneId: !Ref DNSHostedZoneId
      AliasTarget:
        DNSName: !GetAtt LoadBalancer.DNSName
        HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID
        EvaluateTargetHealth: true

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${ProjectName}-alb-${Environment}
      GroupDescription: Security group for application load balancer
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
      Tags:
        - Key: project-name
          Value: !Ref ProjectName
        - Key: environment
          Value: !Ref Environment

Outputs:
  ALBTargetGroupArn:
    Value: !Ref TargetGroup
  ALBSecurityGroupId:
    Value: !GetAtt LoadBalancerSecurityGroup.GroupId
  ALBUri:
    Value: !GetAtt LoadBalancer.DNSName